@model IEnumerable<Cinema.Models.Projection>

@{
    ViewData["Title"] = "Projections";
    var ticketsCount = ViewData["TicketsCount"] as Dictionary<int, int>;
}

<h1>Projections</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Projection</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Movie</th>
            <th>Hall</th>
            <th>Projection Time</th>
            <th>Ticket Price</th>
            <th>Available Seats</th>
            <th>Taken Seats</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var takenSeats = ticketsCount != null && ticketsCount.ContainsKey(item.Id) ? ticketsCount[item.Id] : 0;
            var totalSeats = item.Hall.Rows * item.Hall.Columns;
            var availableSeats = totalSeats - takenSeats;

            <tr>
                <td>@item.Movie?.Title</td>
                <td>@item.Hall?.Name</td>
                <td>@item.ProjectionTime.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@item.TicketPrice.ToString("C")</td>
                <td>@availableSeats</td>
                <td>@takenSeats</td>
                <td>
                    <a asp-controller="Tickets" asp-action="Create" asp-route-projectionId="@item.Id" class="btn btn-success btn-sm">
                        Buy Ticket
                    </a>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
